<?php

namespace airmoi\tests;

use airmoi\FileMaker\FileMaker;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-09-09 at 19:41:41.
 */
class FileMakerTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var FileMaker
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new FileMaker($GLOBALS['DB_FILE'], $GLOBALS['DB_HOST'], $GLOBALS['DB_USER'], $GLOBALS['DB_PASSWD']);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers airmoi\FileMaker\FileMaker::isError
     */
    public function testIsError() {
        $error = new \airmoi\FileMaker\FileMakerException($this->object, 'Test FileMaker exception');
        $record = new \airmoi\FileMaker\Object\Record(new \airmoi\FileMaker\Object\Layout($this->object));

        $this->assertTrue(FileMaker::isError($error));
        $this->assertFalse(FileMaker::isError($record));
    }

    /**
     * @covers airmoi\FileMaker\FileMaker::getMinServerVersion
     */
    public function testGetMinServerVersion() {
        // Remove the following lines when you implement this test.
        $this->assertStringMatchesFormat('%d.%d.%d.%d', $this->object->getMinServerVersion());
    }

    /**
     * @covers airmoi\FileMaker\FileMaker::setProperty
     */
    public function testSetProperty() {
        $this->object->setProperty('logLevel', FileMaker::LOG_INFO);

        //Test valid property
        $this->assertEquals(FileMaker::LOG_INFO, $this->object->getProperty('logLevel'));

        //Test invalid property (should return an error)
        $this->assertTrue(FileMaker::isError($this->object->setProperty('fakeProperty', FileMaker::LOG_INFO)));
    }

    /**
     * @covers airmoi\FileMaker\FileMaker::getProperty
     */
    public function testGetProperty() {
        $this->assertEquals('en', $this->object->getProperty('locale'));
    }

    /**
     * @covers airmoi\FileMaker\FileMaker::getProperties
     */
    public function testGetProperties() {
        $this->assertArrayHasKey('locale', $this->object->getProperties());
    }

    /**
     * @covers airmoi\FileMaker\FileMaker::setLogger
     * @todo   Implement testSetLogger().
     */
    public function testSetLogger() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers airmoi\FileMaker\FileMaker::newAddCommand
     */
    public function testNewAddCommand() {
        $command = $this->object->newAddCommand('sample');
        $this->assertInstanceOf(\airmoi\FileMaker\Command\Add::class, $command);
    }

    /**
     * @covers airmoi\FileMaker\FileMaker::newEditCommand
     */
    public function testNewEditCommand() {
        $command = $this->object->newEditCommand('sample', 1);
        $this->assertInstanceOf(\airmoi\FileMaker\Command\Edit::class, $this->object->newEditCommand('sample', 1));
    }

    /**
     * @covers airmoi\FileMaker\FileMaker::newDeleteCommand
     * @todo   Implement testNewDeleteCommand().
     */
    public function testNewDeleteCommand() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers airmoi\FileMaker\FileMaker::newDuplicateCommand
     * @todo   Implement testNewDuplicateCommand().
     */
    public function testNewDuplicateCommand() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers airmoi\FileMaker\FileMaker::newFindCommand
     * @todo   Implement testNewFindCommand().
     */
    public function testNewFindCommand() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers airmoi\FileMaker\FileMaker::newCompoundFindCommand
     * @todo   Implement testNewCompoundFindCommand().
     */
    public function testNewCompoundFindCommand() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers airmoi\FileMaker\FileMaker::newFindRequest
     * @todo   Implement testNewFindRequest().
     */
    public function testNewFindRequest() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers airmoi\FileMaker\FileMaker::newFindAnyCommand
     * @todo   Implement testNewFindAnyCommand().
     */
    public function testNewFindAnyCommand() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers airmoi\FileMaker\FileMaker::newFindAllCommand
     * @todo   Implement testNewFindAllCommand().
     */
    public function testNewFindAllCommand() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers airmoi\FileMaker\FileMaker::newPerformScriptCommand
     * @todo   Implement testNewPerformScriptCommand().
     */
    public function testNewPerformScriptCommand() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers airmoi\FileMaker\FileMaker::createRecord
     * @todo   Implement testCreateRecord().
     */
    public function testCreateRecord() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers airmoi\FileMaker\FileMaker::getRecordById
     * @todo   Implement testGetRecordById().
     */
    public function testGetRecordById() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers airmoi\FileMaker\FileMaker::getLayout
     * @todo   Implement testGetLayout().
     */
    public function testGetLayout() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers airmoi\FileMaker\FileMaker::listDatabases
     * @todo   Implement testListDatabases().
     */
    public function testListDatabases() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers airmoi\FileMaker\FileMaker::listScripts
     * @todo   Implement testListScripts().
     */
    public function testListScripts() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers airmoi\FileMaker\FileMaker::listLayouts
     * @todo   Implement testListLayouts().
     */
    public function testListLayouts() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers airmoi\FileMaker\FileMaker::getContainerData
     * @todo   Implement testGetContainerData().
     */
    public function testGetContainerData() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers airmoi\FileMaker\FileMaker::execute
     * @todo   Implement testExecute().
     */
    public function testExecute() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers airmoi\FileMaker\FileMaker::getContainerDataURL
     * @todo   Implement testGetContainerDataURL().
     */
    public function testGetContainerDataURL() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers airmoi\FileMaker\FileMaker::__set
     * @todo   Implement test__set().
     */
    public function test__set() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers airmoi\FileMaker\FileMaker::toOutputCharset
     * @todo   Implement testToOutputCharset().
     */
    public function testToOutputCharset() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers airmoi\FileMaker\FileMaker::getLastRequestedUrl
     * @todo   Implement testGetLastRequestedUrl().
     */
    public function testGetLastRequestedUrl() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers airmoi\FileMaker\FileMaker::dateConvertInput
     * @todo   Implement testDateConvertInput().
     */
    public function testDateConvertInput() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers airmoi\FileMaker\FileMaker::dateConvertOutput
     * @todo   Implement testDateConvertOutput().
     */
    public function testDateConvertOutput() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

}
